{"ast":null,"code":"// Assume className is simple and can be found at top-level (window).\n// Fallback to eval to handle cases like 'My.React.ComponentName'.\n// Also, try to gracefully import Babel 6 style default exports\nvar topLevel = typeof window === \"undefined\" ? this : window;\nmodule.exports = function (className) {\n  var constructor;\n  // Try to access the class globally first\n  constructor = topLevel[className];\n\n  // If that didn't work, try eval\n  if (!constructor) {\n    constructor = eval(className);\n  }\n\n  // Lastly, if there is a default attribute try that\n  if (constructor && constructor['default']) {\n    constructor = constructor['default'];\n  }\n  return constructor;\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}